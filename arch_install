#!/bin/sh

# arch install
# https://dimanao.org/ustanovka-arch-linux-uefi-grub/
# https://wiki.archlinux.org/index.php/Installation_guide

#	- розкоментувати форматування, якщо потрібно
# 	- замінити sdw на потрібний диск
# 	- замінити користувача і його ID
# 	- замінити паролі, і якщо потрібно, розкоментувати створення пароля користувача
# 	- підставити потрібний графічний драйвер
#	- опції монтування для SSD
#	- замінити hostname і domain
# 	- прослідкувати відповідність розділів на диску
#	- годинник в utc
#	- вибрати потрібні пакети
#	- закоментувати непотрібне в autostart
#  - видалити чи залишити установочні файли 01-install.sh, 02-setupChroot.sh

# 	визначаємо драйвер відеокарти і підставляємо в уcтановку X
# 	lspci | grep -e VGA -e 3D

# перевіряємо ping
# запускаємо fdisk

INSDIR="archInstaller"
USERNAME="ih"
USER_ID="-u 1000" # ""
PASSPHRASE="af"

AD_GROUP="" # additional group
GROUP_ID="" # uncomment groupadd before useradd
GROUPSS="wheel" # "wheel,$AD_GROUP" "gp1,gp2" => uncomment groupadd before useradd

VDRIVER="vmware" # "vmware" "intel" "amdgpu" "ati" "nouveau" "xorg-drivers"
SSD="" # ",discard"

HOST_NAME="archlinux"
DOMAIN="vbox"
LOCAL_TIME="--localtime" # "--utc"

PARTITION="#" 	# ""
FORMAT="#" 		# ""
THEMING="#"		# ""
ADD_INSTALL="#" # appmenu xfce

mkdir $INSDIR
cd $INSDIR



############
# Install script
###

cat > 01-install.sh << EOF
#!/bin/sh

set -e

timedatectl set-ntp true

$PARTITION sh 05-partition.sh

$FORMAT mkfs.ext4 /dev/sdw2
mount -o noatime$SSD /dev/sdw2 /mnt

$FORMAT mkfs.fat -F 32 /dev/sdw1
mkdir -p /mnt/boot/efi
mount -o noatime$SSD /dev/sdw1 /mnt/boot/efi

$FORMAT mkfs.ext4 /dev/sdw3
mkdir -p /mnt/home
mount -o noatime$SSD /dev/sdw3 /mnt/home


# ------- Installation
# - remove kde or xfce line
# - pcmanfm-gtk3 libreoffice-fresh-uk jack2 firefox-i18n-uk \
# - use ristretto insteasd of viewnior because the last one is gtk2 only!!!
# - remove fonts during kde installation, kde install fonts as dependency
pacstrap -i /mnt base mkinitcpio linux-lts linux-firmware grub grub-theme-vimix efibootmgr neovim grml-zsh-config \
tree less mc htop git openssh networkmanager sudo \
ttf-liberation ttf-hack \
noto-fonts \
alacritty \
xorg-server xf86-video-$VDRIVER alsa-lib alsa-utils mpv-mpris \
pipewire pipewire-alsa pipewire-pulse pipewire-jack \
pulseaudio pulseaudio-alsa \
pavucontrol \
darkman \
cinnamon cinnamon-translations touchegg blueberry dconf-editor file-roller gnome-calculator gnome-disk-utility nemo-audio-tab nemo-emblems nemo-fileroller nemo-preview nemo-seahorse baobab seahorse gnome-terminal gnome-system-monitor ristretto gucharmap xreader \
baobab evince gdm gnome-backgrounds gnome-calculator gnome-calendar gnome-characters gnome-clocks gnome-color-manager gnome-connections gnome-console gnome-contacts gnome-control-center gnome-disk-utility gnome-font-viewer gnome-keyring gnome-logs gnome-menus gnome-remote-desktop gnome-session gnome-shell gnome-system-monitor gnome-user-share grilo-plugins gvfs gvfs-afc gvfs-dnssd gvfs-goa gvfs-google gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-onedrive gvfs-smb gvfs-wsdd loupe nautilus orca rygel simple-scan snapshot sushi tecla tracker3-miners xdg-desktop-portal-gnome xdg-user-dirs-gtk gnome-shell-extension-caffeine dconf-editor file-roller gnome-themes-extra \
bspwm sxhkd rofi dunst libnotify picom xwallpaper awesome-terminal-fonts qt6ct kvantum lxqt-policykit lxqt-powermanagement lxqt-notificationd lxqt-archiver lximage-qt pcmanfm-qt screengrab featherpad \
colord-kde flatpak-kcm qt6ct \
plasma-meta konsole dolphin-plugins ark okular kinfocenter kompare kfind gwenview spectacle kcolorchooser kolourpaint kdeconnect kmix kamoso lokalize filelight kcalc kcharselect kcron kwalletmanager krecorder qt6ct kvantum plasma-applet-window-buttons kio-gdrive python-pyqt6 \
xfce4-appfinder xfce4-panel xfce4-power-manager xfce4-session xfce4-settings xfconf xfdesktop xfwm4 xfce4-clipman-plugin xfce4-mpc-plugin xfce4-notifyd xfce4-screensaver xfce4-screenshooter exo garcon xfce4-whiskermenu-plugin xfce4-pulseaudio-plugin xfce4-xkb-plugin arc-icon-theme \
thunar thunar-volman tumbler thunar-archive-plugin thunar-media-tags-plugin \
network-manager-applet lightdm-gtk-greeter-settings gvfs ristretto catfish file-roller \
plank p7zip unrar appmenu-gtk-module \
--noconfirm --quiet

genfstab -U /mnt >> /mnt/etc/fstab

git clone --depth 1 https://github.com/ihntk/dotfiles.git

# select one of these options
mv ../$INSDIR /mnt/root/
# cp -r ../$INSDIR /mnt/root/

echo "go to /root/$INSDIR"
arch-chroot /mnt /bin/zsh

EOF


############
# Config script
###

cat > 02-setupChroot.sh << EOF
#!/usr/bin/env bash

set -e

# ------- Language
echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && echo "uk_UA.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=uk_UA.UTF-8" > /etc/locale.conf

# ------- Time
ln -sf /usr/share/zoneinfo/Europe/Kiev /etc/localtime
hwclock --systohc $LOCAL_TIME

# ------- Host
echo "$HOST_NAME" > /etc/hostname
echo -e "127.0.0.1	localhost\n::1		localhost\n127.0.1.1	$HOST_NAME.$DOMAIN	$HOST_NAME" > /etc/hosts

# ------- Grub
sh -c "sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=1/' /etc/default/grub"
echo "GRUB_THEME=/usr/share/grub/themes/Vimix/theme.txt" >> /etc/default/grub
grub-install
grub-mkconfig -o /boot/grub/grub.cfg

# ------- Pacman
sh -c "sed -i 's/#Color/Color/' /etc/pacman.conf"
sh -c "sed -i 's/#ParallelDownloads/ParallelDownloads/' /etc/pacman.conf"


$ADD_INSTALL sh 04-additionalInstall.sh

# ------- Copy dotfiles
cp -r dotfiles/defaultConfig/* /				# */
sh dotfiles/soft/zsh/setup.sh

# --- cinnamon
cp -r dotfiles/cinnamonConfig/etc /
cp -r dotfiles/soft/fontconfig/etc/skel/.config/fontconfig/fonts-a.conf  /etc/fonts/conf.d/99-deafaul-fonts.conf
cp -r dotfiles/soft/cinnamon-dconf/etc /
dconf update

# --- gnome
cp -r dotfiles/soft/gnome-dconf/etc /
dconf update

# --- kde
cp -r dotfiles/kdeConfig/etc /
sh dotfiles/kdeConfig/initPlasma

# --- xfce
cp -r dotfiles/xfceConfig/{etc,usr} /
sh dotfiles/xfceConfig/initEtcXdgXfce
cp dotfiles/soft/fontconfig/etc/skel/.config/fontconfig/fonts.conf  /etc/fonts/conf.d/99-deafaul-fonts.conf
sh -c "sed -i 's/Hack/HackNerdFont/' /etc/fonts/conf.d/99-deafaul-fonts.conf"

# --- lite-xl settings
sh dotfiles/soft/lite-xl/initSettings

# --- clear
rm /etc/skel/*/.gitkeep

$THEMING sh 03-setupThemes.sh

# ------- add user
# groupadd -g $GROUP_ID $AD_GROUP
useradd -m -g users -G $GROUPSS $USER_ID -s /bin/zsh $USERNAME # Создание нового пользователя
sh -c "sed -i 's/^# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/g' /etc/sudoers"

# ------- Password
# echo "$USERNAME:$PASSPHRASE" | chpasswd # Пароль користувача

echo "set password"
passwd $USERNAME

# ------- Autostart
# remove lightdm or sddm line
systemctl enable NetworkManager
systemctl enable lightdm
systemctl enable sddm

# ------- Clean after installation
cd /root
# rm $INSDIR/{01-install.sh,02-setupChroot.sh}
mv /root/$INSDIR /home/$USERNAME/
chown -hR $USERNAME:users /home/$USERNAME/$INSDIR
echo "  -- installation is finished --  "

EOF


############
# Config themes
###

cat > 03-setupThemes.sh << EOF
#!/bin/bash

set -e

# xfce default theme
echo -e '<?xml version="1.0" encoding="UTF-8"?>\n\n<channel name="xfwm4" version="1.0">\n  <property name="general" type="empty">\n    <property name="theme" type="string" value="Mojave-light"/>\n  </property>\n</channel>\n' > /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml
echo -e '<?xml version="1.0" encoding="UTF-8"?>\n\n<channel name="xsettings" version="1.0">\n  <property name="Net" type="empty">\n    <property name="ThemeName" type="string" value="Mojave-light"/>\n    <property name="IconThemeName" type="string" value="Arc"/>\n  </property>\n</channel>\n' > /etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml
sh -c "sed -i 's/name=\"CursorThemeName\" type=\"string\" value=\"\"/name=\"CursorThemeName\" type=\"string\" value=\"breeze_cursors\"/' /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml"

echo "installing gtk themes and icons"
tar -C /usr/share/themes/ -xf Mojave-light.tar.xz
tar -C /usr/share/themes/ -xf XFCE_Colour_Lite.tar.gz XFCE_Colour_Lite

# gtk3 theme
echo -e "gtk-cursor-theme-name=breeze_cursors\ngtk-theme-name=Mojave-light\n" >> /etc/skel/.config/gtk-3.0/settings.ini
# icons theme for xfce!!!
echo -e "gtk-icon-theme-name=Arc\n" >> /etc/skel/.config/gtk-3.0/settings.ini
# qt theme for kde plasma
echo -e "export QT_QPA_PLATFORMTHEME=qt6ct\n" >> /etc/skel/.profile

# lightdm theme
sh -c "sed -i 's/#greeter-session=example-gtk-gnome/greeter-session=lightdm-gtk-greeter/' /etc/lightdm/lightdm.conf"
echo -e 'cursor-theme-name = breeze_cursors\ntheme-name = Mojave-light\nbackground = #204a87\nicon-theme-name = Arc\nposition = 50%,end 50%,start\n' >> /etc/lightdm/lightdm-gtk-greeter.conf

EOF


############
# Config after install
###

cat > 04-additionalInstall.sh << EOF
#!/bin/bash

set -e

# pacman -S --needed base-devel --noconfirm --noprogressbar --quiet
# git clone https://aur.archlinux.org/yay.git
# cd yay
# makepkg -si
# cd ..
# yay -Syu vala-panel-appmenu-xfce-git lightdm-slick-greeter
# yay -S pcloudcc
# yay -S xcursor-breeze

pacman -U lite-xl* \
vala-panel-appmenu* \
breeze-cursor* xiccd* \
neovim-fugitive* neovim-airline* neovim-gruvbox-material-git* \
polybar* xiccd* \
--noconfirm

# systemctl --user enable --now pcloud

EOF

cat > 05-partition.sh << EOF
#!/bin/bash

set -e
	# Wipe the MBR:
  	dd if=/dev/zero of=/dev/sdw bs=512 count=1

  	# 62M efi + 1 partition
	/sbin/fdisk /dev/sdw << EOf
	g
	n
	1

	+62M
	t
	1
	n
	2


	w
EOf

EOF


rm ../arch_install
echo "copy packages to $INSDIR"
# mv ../!($INSDIR) $INSDIR/


# ===
# Add setfont to the BINARIES array in /etc/mkinicpio.conf | console font is disabled!
# CONSOLE_FONT="cyr-sun16" # "ter-v18b" for leptop or "ter-v16n" => Add terminus-font to pacstrap

# echo "FONT=$CONSOLE_FONT" > /etc/vconsole.conf
# sh -c "sed -i 's/BINARIES=()/BINARIES=(setfont)/' /etc/mkinicpio.conf"

# sh -c "sed -i '/\[multilib\]/,/Include/s/^[ ]*#//' /etc/pacman.conf"

# pacman -S nvidia nvidia-settings nvidia-utils opencl-nvidia opencl-headers lib32-nvidia-utils lib32-opencl-nvidia --noconfirm --noprogressbar --quiet # Установка драйверов Nvidia
# yay -S nvidia-340xx-lts-dkms

# echo -e "MODULES=(btrfs nvme nvidia)\nHOOKS=(autodetect systemd)\nCOMPRESSION=\"cat\"" > /etc/mkinitcpio.conf
# mkinitcpio -p linux-lts # Создание образа ранней загрузки
# efibootmgr -d /dev/nvme0n1 -p 1 -c -L "Arch Linux" -l /vmlinuz-linux -u "root=/dev/nvme0n1p2 rw quiet rootflags=subvol=@root initrd=/intel-ucode.img initrd=/initramfs-linux.img"
